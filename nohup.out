Start Initializing dictionaries
en
fr
vi
Finished Initializing dictionaries
Request ->  /2/check
Request body ->  {
  language: 'en',
  words: [ 'Welcume', 'ăn', 'tinymce', 'tinymce', 'mour' ]
}
Welcume  =>  false
ăn  =>  false
tinymce  =>  false
mour  =>  false
Request ->  /2/suggestions
Request body ->  {
  language: 'en',
  words: [ 'Welcume', 'ăn', 'tinymce', 'tinymce', 'mour' ]
}
Welcume  =>  [ 'Welcome' ]
ăn  =>  [
  'n',  'an', 'en',
  'in', 'kn', 'on',
  'tn', 'Ln', 'Mn',
  'Rn', 'Sn', 'UN',
  'Zn'
]
tinymce  =>  []
mour  =>  [
  'lour',  'moor',  'moue',
  'your',  'mourn', 'our',
  'amour', 'dour',  'four',
  'hour',  'pour',  'sour',
  'tour'
]
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/suggestions
Request body ->  {
  language: 'en',
  words: [ 'Welcume', 'ăn', 'tinymce', 'tinymce', 'mour' ]
}
Welcume  =>  [ 'Welcome' ]
ăn  =>  [
  'n',  'an', 'en',
  'in', 'kn', 'on',
  'tn', 'Ln', 'Mn',
  'Rn', 'Sn', 'UN',
  'Zn'
]
tinymce  =>  []
mour  =>  [
  'lour',  'moor',  'moue',
  'your',  'mourn', 'our',
  'amour', 'dour',  'four',
  'hour',  'pour',  'sour',
  'tour'
]
Start Initializing dictionaries
en
fr
vi
Finished Initializing dictionaries
Request ->  /2/suggestions
Request body ->  {
  language: 'en',
  words: [ 'Welcume', 'ăn', 'tinymce', 'tinymce', 'mour' ]
}
Welcume  =>  [ 'Welcome' ]
ăn  =>  [
  'n',  'an', 'en',
  'in', 'kn', 'on',
  'tn', 'Ln', 'Mn',
  'Rn', 'Sn', 'UN',
  'Zn'
]
tinymce  =>  []
mour  =>  [
  'lour',  'moor',  'moue',
  'your',  'mourn', 'our',
  'amour', 'dour',  'four',
  'hour',  'pour',  'sour',
  'tour'
]
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/check
Request body ->  {
  language: 'vi',
  words: [ 'Welcume', 'ăn', 'tinymce', 'tinymce', 'mour' ]
}
Welcume  =>  false
ăn  =>  true
tinymce  =>  false
mour  =>  false
Request ->  /2/check
Request body ->  {
  language: 'vi',
  words: [ 'Welcume', 'ăn', 'tinymce', 'tinymce', 'mour' ]
}
Welcume  =>  false
ăn  =>  true
tinymce  =>  false
mour  =>  false
Start Initializing dictionaries
en
fr
vi
Finished Initializing dictionaries
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/check
Request body ->  {
  language: 'vi',
  words: [ 'Welcume', 'ăn', 'tinymce', 'tinymce', 'mour' ]
}
Welcume  =>  false
ăn  =>  true
tinymce  =>  false
mour  =>  false
Response body ->  { check: { Welcume: false, 'ăn': true, tinymce: false, mour: false } }
Request ->  /2/check
Request body ->  {
  language: 'vi',
  words: [ 'Welcume', 'ăn', 'tinymce', 'tinymce', 'mour' ]
}
Welcume  =>  false
ăn  =>  true
tinymce  =>  false
mour  =>  false
Response body ->  { check: { Welcume: false, 'ăn': true, tinymce: false, mour: false } }
Request ->  /2/check
Request body ->  {
  language: 'vi',
  words: [ 'Welcume', 'ăn', 'tinymce', 'tinymce', 'mour' ]
}
Welcume  =>  false
ăn  =>  true
tinymce  =>  false
mour  =>  false
Response body ->  { check: { Welcume: false, 'ăn': true, tinymce: false, mour: false } }
Request ->  /2/check
Request body ->  {
  language: 'vi',
  words: [ 'Welcume', 'ăn', 'tinymce', 'tinymce', 'mour' ]
}
Welcume  =>  false
ăn  =>  true
tinymce  =>  false
mour  =>  false
Response body ->  { check: { Welcume: false, 'ăn': true, tinymce: false, mour: false } }
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/check
Request body ->  { language: 'en_us', words: [ 'startup' ] }
{ error: 'no_supported_code' }
Request ->  /2/check
Request body ->  { language: 'en_us', words: [ 'startup' ] }
{ error: 'no_supported_code' }
Request ->  /2/check
Request body ->  { language: 'en_us', words: [ 'startup' ] }
{ error: 'no_supported_code' }
Start Initializing dictionaries
en
fr
vi
Finished Initializing dictionaries
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/check
Request body ->  { language: 'fr', words: [ 'startup' ] }
startup  =>  true
Response body ->  { check: { startup: true } }
Request ->  /2/check
Request body ->  { language: 'fr', words: [ 'Welchs' ] }
Welchs  =>  false
Response body ->  { check: { Welchs: false } }
Request ->  /2/suggestions
Request body ->  { language: 'fr', words: [ 'Welchs' ] }
Welchs  =>  [ 'Welche', 'Welches' ]
Response body ->  { spell: { Welchs: [ 'Welche', 'Welches' ] } }
Request ->  /2/suggestions
Request body ->  { language: 'fr', words: [ 'Welchs' ] }
Welchs  =>  [ 'Welche', 'Welches' ]
Response body ->  { spell: { Welchs: [ 'Welche', 'Welches' ] } }
Start Initializing dictionaries
en
en-gb
fr
vi
Finished Initializing dictionaries
Request ->  /2/autocorrect
Request body ->  {}
Request ->  /2/check
Request body ->  { language: 'en_us', words: [ 'startup' ] }
startup  =>  true
Response body ->  { check: { startup: true } }
Request ->  /2/check
Request body ->  { language: 'en_us', words: [ 'adbad' ] }
adbad  =>  false
Response body ->  { check: { adbad: false } }
Request ->  /2/suggestions
Request body ->  { language: 'en_us', words: [ 'adbad' ] }
adbad  =>  [ 'bad', 'abed', 'adman', 'dad', 'dead' ]
Response body ->  { spell: { adbad: [ 'bad', 'abed', 'adman', 'dad', 'dead' ] } }
Request ->  /2/suggestions
Request body ->  { language: 'en_us', words: [ 'adbad' ] }
adbad  =>  [ 'bad', 'abed', 'adman', 'dad', 'dead' ]
Response body ->  { spell: { adbad: [ 'bad', 'abed', 'adman', 'dad', 'dead' ] } }
Request ->  /2/check
Request body ->  { language: 'en_us', words: [ 'welcume' ] }
welcume  =>  false
Response body ->  { check: { welcume: false } }
Request ->  /2/suggestions
Request body ->  { language: 'en_us', words: [ 'welcume' ] }
welcume  =>  [ 'welcome' ]
Response body ->  { spell: { welcume: [ 'welcome' ] } }
Request ->  /2/suggestions
Request body ->  { language: 'en_us', words: [ 'welcume' ] }
welcume  =>  [ 'welcome' ]
Response body ->  { spell: { welcume: [ 'welcome' ] } }
Request ->  /2/check
Request body ->  { language: 'en_us', words: [ 'trach' ] }
trach  =>  false
Response body ->  { check: { trach: false } }
Request ->  /2/suggestions
Request body ->  { language: 'en_us', words: [ 'trach' ] }
trach  =>  [
  'teach', 'trace',
  'track', 'tract',
  'trash', 'Traci',
  'Tracy'
]
Response body ->  {
  spell: {
    trach: [
      'teach', 'trace',
      'track', 'tract',
      'trash', 'Traci',
      'Tracy'
    ]
  }
}
Request ->  /2/suggestions
Request body ->  { language: 'en_us', words: [ 'trach' ] }
trach  =>  [
  'teach', 'trace',
  'track', 'tract',
  'trash', 'Traci',
  'Tracy'
]
Response body ->  {
  spell: {
    trach: [
      'teach', 'trace',
      'track', 'tract',
      'trash', 'Traci',
      'Tracy'
    ]
  }
}
